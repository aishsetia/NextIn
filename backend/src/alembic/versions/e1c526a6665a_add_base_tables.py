"""Add base tables

Revision ID: e1c526a6665a
Revises: 
Create Date: 2024-11-18 03:51:40.684059

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e1c526a6665a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "WAITING_FOR_FILE",
        "PROCESSING",
        "FINISHED",
        "FAILED",
        name="clothingitemstatus",
    ).create(op.get_bind())
    op.create_table(
        "user",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("photo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "clothingitem",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("image_path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("color", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("garment_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("patterns", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "WAITING_FOR_FILE",
                "PROCESSING",
                "FINISHED",
                "FAILED",
                name="clothingitemstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("clothingitem")
    op.drop_table("user")
    sa.Enum(
        "WAITING_FOR_FILE",
        "PROCESSING",
        "FINISHED",
        "FAILED",
        name="clothingitemstatus",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
